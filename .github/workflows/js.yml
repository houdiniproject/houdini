# License: LGPL-3.0-or-later
name: Javascript build and test
env: 
  ruby: '2.7.7'
on: 
  pull_request:
    paths-ignore:
      - "**.md"
    types: [opened, reopened, synchronize]
jobs:
  package-download: # this downloads and caches all of the packages. That way if a future job fails, the caching will still occur
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14.19.1]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby }}
          bundler-cache: true
  jest:
    needs: package-download
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14.19.1]
    steps:
      - uses: actions/checkout@v3
      - name: Setup PostgreSQL with PostgreSQL extensions and unprivileged user
        uses: Daniel-Marynicz/postgresql-action@1.0.0
        with:
          postgres_image_tag: 12-alpine
          postgres_user: houdini_user
          postgres_password: password
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby }}
          bundler-cache: true
      - run: bin/setup ci
      - name: Generate JS routes
        run: bin/rails js:routes:typescript
      - name: run jest
        run: yarn jest
  webpack:
    needs: package-download
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        node: [14.19.1]
    steps:
      - uses: actions/checkout@v3
      - name: Setup PostgreSQL with PostgreSQL extensions and unprivileged user
        uses: Daniel-Marynicz/postgresql-action@1.0.0
        with:
          postgres_image_tag: 12-alpine
          postgres_user: houdini_user
          postgres_password: password
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby }}
          bundler-cache: true
      - name: run setup
        run: bin/setup ci
      - name: Generate JS routes
        run: bin/rails js:routes:typescript
      - name: Webpack compile everything
        run: yarn webpack
      - name: Verify storybook compiles
        run: yarn build-storybook
    


    
